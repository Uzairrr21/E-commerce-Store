{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\ecommerce-store\\\\frontend\\\\src\\\\components\\\\OrderConfirmation.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { AppContext } from '../context/AppContext';\nimport { PayPalButtons, usePayPalScriptReducer } from '@paypal/react-paypal-js';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst OrderConfirmation = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [order, setOrder] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [paypalLoading, setPaypalLoading] = useState(false);\n  const {\n    state,\n    updateOrderToPaid\n  } = useContext(AppContext);\n  const {\n    userInfo\n  } = state;\n  const navigate = useNavigate();\n  const [{\n    isPending\n  }, paypalDispatch] = usePayPalScriptReducer();\n  useEffect(() => {\n    const fetchOrder = async () => {\n      try {\n        const {\n          data\n        } = await axios.get(`${process.env.REACT_APP_API_URL}/api/orders/${id}`, {\n          headers: {\n            Authorization: `Bearer ${userInfo.token}`\n          }\n        });\n        setOrder(data);\n        setLoading(false);\n      } catch (err) {\n        var _err$response, _err$response$data;\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message);\n        setLoading(false);\n      }\n    };\n    if (!userInfo) {\n      navigate('/login');\n    } else {\n      fetchOrder();\n    }\n  }, [id, userInfo, navigate]);\n  const onApprove = async (data, actions) => {\n    try {\n      setPaypalLoading(true);\n      const details = await actions.order.capture();\n      const updatedOrder = await updateOrderToPaid(id, details);\n      setOrder(updatedOrder);\n      setPaypalLoading(false);\n      toast.success('Payment successful!');\n    } catch (err) {\n      setPaypalLoading(false);\n      toast.error(err.message || 'Payment failed');\n    }\n  };\n  const createOrder = (data, actions) => {\n    return actions.order.create({\n      purchase_units: [{\n        amount: {\n          value: order.totalPrice.toFixed(2)\n        }\n      }]\n    });\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center my-5\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alert alert-danger my-5\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container my-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4\",\n      children: [\"Order #\", order._id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8\",\n        children: !order.isPaid && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"card-title\",\n              children: \"Payment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), isPending ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Loading PayPal...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [paypalLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Processing payment...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 39\n              }, this), /*#__PURE__*/_jsxDEV(PayPalButtons, {\n                createOrder: createOrder,\n                onApprove: onApprove\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(OrderConfirmation, \"kCoBAp6vwSufRbx2oU0j3PrfN+I=\", false, function () {\n  return [useParams, useNavigate, usePayPalScriptReducer];\n});\n_c = OrderConfirmation;\nexport default OrderConfirmation;\nvar _c;\n$RefreshReg$(_c, \"OrderConfirmation\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useParams","useNavigate","axios","AppContext","PayPalButtons","usePayPalScriptReducer","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","OrderConfirmation","_s","id","order","setOrder","loading","setLoading","error","setError","paypalLoading","setPaypalLoading","state","updateOrderToPaid","userInfo","navigate","isPending","paypalDispatch","fetchOrder","data","get","process","env","REACT_APP_API_URL","headers","Authorization","token","err","_err$response","_err$response$data","response","message","onApprove","actions","details","capture","updatedOrder","success","createOrder","create","purchase_units","amount","value","totalPrice","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_id","isPaid","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Desktop/ecommerce-store/frontend/src/components/OrderConfirmation.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { AppContext } from '../context/AppContext';\r\nimport { PayPalButtons, usePayPalScriptReducer } from '@paypal/react-paypal-js';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst OrderConfirmation = () => {\r\n  const { id } = useParams();\r\n  const [order, setOrder] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [paypalLoading, setPaypalLoading] = useState(false);\r\n  const { state, updateOrderToPaid } = useContext(AppContext);\r\n  const { userInfo } = state;\r\n  const navigate = useNavigate();\r\n  const [{ isPending }, paypalDispatch] = usePayPalScriptReducer();\r\n\r\n  useEffect(() => {\r\n    const fetchOrder = async () => {\r\n      try {\r\n        const { data } = await axios.get(\r\n          `${process.env.REACT_APP_API_URL}/api/orders/${id}`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n          }\r\n        );\r\n        setOrder(data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError(err.response?.data?.message || err.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (!userInfo) {\r\n      navigate('/login');\r\n    } else {\r\n      fetchOrder();\r\n    }\r\n  }, [id, userInfo, navigate]);\r\n\r\n  const onApprove = async (data, actions) => {\r\n    try {\r\n      setPaypalLoading(true);\r\n      const details = await actions.order.capture();\r\n      const updatedOrder = await updateOrderToPaid(id, details);\r\n      setOrder(updatedOrder);\r\n      setPaypalLoading(false);\r\n      toast.success('Payment successful!');\r\n    } catch (err) {\r\n      setPaypalLoading(false);\r\n      toast.error(err.message || 'Payment failed');\r\n    }\r\n  };\r\n\r\n  const createOrder = (data, actions) => {\r\n    return actions.order.create({\r\n      purchase_units: [\r\n        {\r\n          amount: {\r\n            value: order.totalPrice.toFixed(2),\r\n          },\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  if (loading) return <div className=\"text-center my-5\">Loading...</div>;\r\n  if (error) return <div className=\"alert alert-danger my-5\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"container my-5\">\r\n      <h2 className=\"mb-4\">Order #{order._id}</h2>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-8\">\r\n          {/* ... existing shipping and payment method sections ... */}\r\n          \r\n          {!order.isPaid && (\r\n            <div className=\"card mb-4\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\">Payment</h4>\r\n                {isPending ? (\r\n                  <div>Loading PayPal...</div>\r\n                ) : (\r\n                  <>\r\n                    {paypalLoading && <div>Processing payment...</div>}\r\n                    <PayPalButtons\r\n                      createOrder={createOrder}\r\n                      onApprove={onApprove}\r\n                    />\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        {/* ... existing order summary section ... */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderConfirmation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}